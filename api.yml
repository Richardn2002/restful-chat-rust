openapi: '3.0.2'
info:
  title: RESTful Chat Server in Rust - API
  version: '0.1'
servers:
  - url: http://localhost:3000/chat
components:
  schemas:
    Credentials:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
    U64:
      description: Used for any ID/timestamp/counts
      type: integer
      minimum: 0
    IDArray:
      description: Array of IDs with 'has_more' marker
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/U64'
        has_more:
          type: boolean
    Message:
      description: A single message object
      type: object
      properties:
        timestamp:
          $ref: '#/components/schemas/U64'
        msg_type:
          type: string
          enum: ['plain', 'image', 'location', 'poll']
        reply_to:
          description: ID of the message replying to
          $ref: '#/components/schemas/U64'
        pings:
          description: Users pinged in this message
          type: array
          items:
            $ref: '#/components/schemas/U64'
        content:
          description: Generic JSON object carrying message body
          type: object
    MessageArray:
      description: Array of messages sorted in chronological order with marker
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Message'
        has_more:
          type: boolean
    UnreadRoomsArray:
      description: Array of rooms sorted by activity, each entry with rid, unread counts and message preview.
      type: object
      properties:
        data:
          type: array
          items:
            type: object
            properties:
              rid:
                $ref: '#/components/schemas/U64'
              unread_count:
                $ref: '#/components/schemas/U64'
              preview:
                $ref: '#/components/schemas/Message'
paths:
  /login:
    post:
      description: Provides credentials and receive JWT if valid.
      requestBody:
        description: Credentials
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Credentials"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  api_key:
                    type: string
        "400":
          description: Bad request.
        "401":
          description: Credentials invalid.
        "500":
          description: Unexpected error.
    get:
      description: Returns list of rooms
      parameters:
        - name: pn
          in: query
          description: Page number, starting from 0, 10 per page, rooms sorted by activity
          required: false
          $ref: '#/components/schemas/U64'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IDArray'
        '400':
          description: Bad request.
        '401':
          description: Not properly authorized to query the intended user.
        '500':
          description: Unexpected error.
  /messages:
    get:
      description: Returns list of messages. Length from 0 to 10.
      parameters:
        - name: rid
          in: query
          description: ID of the room containing the messages
          required: true
          $ref: '#/components/schemas/U64'
        - name: mid
          in: query
          description: ID of the message that is the reference head. If none, return latest 10 messages.
          required: false
          $ref: '#/components/schemas/U64'
        - name: into_past
          in: query
          description: True if the reference head is the newest in the returned list
          required: true
          schema:
            type: boolean
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageArray'
        '400':
          description: Bad request.
        '401':
          description: Not properly authorized to query the intended room.
        '500':
          description: Unexpected error.
    post:
      description: Sends a message.
      parameters:
        - name: rid
          in: query
          description: ID of the destination room
          required: true
          $ref: '#/components/schemas/U64'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Message'
      responses:
        '200':
          description: OK
        '400':
          description: Bad request or invalid message.
        '401':
          description: Not properly authorized to send on behalf of the user to the room.
        '500':
          description: Unexpected error.
  /updates/read:
    post:
      description: Marks that all messages have been read by user until (including) message in a room.
      parameters:
        - name: rid
          in: query
          required: true
          $ref: '#/components/schemas/U64'
        - name: mid
          in: query
          required: true
          $ref: '#/components/schemas/U64'
      responses:
        '200':
          description: OK
        '400':
          description: Bad request.
        '401':
          description: Not properly authorized for the intended room or user.
        '500':
          description: Unexpected error.
  /updates/unread:
    get:
      description: Returns list of rooms with unread messages. Length from 0 to 10.
      parameters:
        - name: pn
          in: query
          description: Page number, starting from 0, 10 per page, rooms sorted by activity
          required: false
          $ref: '#/components/schemas/U64'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnreadRoomsArray'
        '400':
          description: Bad request.
        '401':
          description: Not properly authorized to query for the intended user.
        '500':
          description: Unexpected error.